#!/usr/bin/env ruby

require 'term/ansicolor'
require 'rbconfig'
require 'yaml'
require 'stringio'

include Term::ANSIColor

ENV['FORMAT'] ||= 'human'

host_os = case RbConfig::CONFIG['host_os']
when /^darwin/
  'osx'
when /^linux/
  'linux'
else
  raise "Unknown host OS: #{RbConfig::CONFIG['host_os']}"
end

commands = YAML.load_file(ENV['COMMANDS_FILE'] || File.join(File.dirname(__FILE__), '..', 'commands.yml'))['commands']

def output_human_readable(job)
  print yellow, bold, (job[:name] || Array(job[:command]).join(" ")), reset, "\n"
  print job[:output], "\n"
end

@json_out = {system_info: {}}

def output_json(job)
  out = job[:output].split(/\n/).reject(&:empty?)
  out = out.first if out.length == 1
  info = { output: out }
  info[:name] = job[:name] if job[:name]
  info[:name] ||= job[:command]
  key = job[:key] || info[:name].downcase.gsub(/[^a-zA-z0-9]/, '_').gsub(/_+/, '_')
  @json_out[:system_info][key] = info
end

at_exit do
  if ENV['FORMAT'] == 'json' && !@json_out[:system_info].empty?
    require 'json'
    puts JSON.pretty_generate(@json_out)
  end
end

(Array(commands[host_os]) + Array(commands['common'])).each do |cmd|
  if cmd.is_a? Hash
    command = Array(cmd['command'])
    name    = cmd['name']
    pipe    = " | #{cmd['pipe']}"
    pre     = cmd['pre']
    post    = cmd['post']
  else
    command = cmd
  end

  pre && %x(#{pre})

  invoke = ['bash', '-l', '-c', '\'', command, '\'', pipe].compact.flatten.join " "
  output = %x(#{invoke} 2>/dev/null).chomp

  post && %x(#{post})

  if output.length > 0
    job = { name: name, command: command, output: output }
    output_human_readable(job) if ENV['FORMAT'] == 'human'
    output_json(job) if ENV['FORMAT'] == 'json'
  end
end
